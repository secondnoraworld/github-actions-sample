#!/bin/sh

set -eu

main() {
  from=$1
  from_with_origin=origin/$1
  into_with_origin=origin/$2

  validate "$@"

  # "fast_forwarded" should be executed first because "has_only_merge_commits" is low performance
  if ! fast_forwarded > /dev/null 2>&1; then
    if ! has_only_merge_commits > /dev/null 2>&1; then
      echo "ERROR: The $from_with_origin branch is not fast-forwarded." >&2
      exit 2
    else
      echo "INFO: The $into_with_origin branch has the commits that are not in the $from_with_origin branch, but it is OK because these commits are merge commits and their parent commits are contained within $from_with_origin branch all."
    fi
  else
    echo "INFO: Congrats! The $from_with_origin branch is fast-forwarded!"
  fi
}

fast_forwarded() {
  if [ "$(git rev-list --count "$from_with_origin".."$into_with_origin")" -eq 0 ]; then
    echo true
    return 0
  else
    echo false
    return 1
  fi
}

# https://stackoverflow.com/questions/3824050/telling-if-a-git-commit-is-a-merge-revert-commit
has_only_merge_commits() {
  for commit in $(git rev-list "$from_with_origin".."$into_with_origin"); do
    # return false if there are non-merge commits
    if [ "$(git cat-file -p "$commit" | grep -cE "^parent")" -lt 2 ]; then
      echo false
      return 1
    fi

    # return false if there are commits whose parents are not in head branch
    for parent_commit in $(git cat-file -p "$commit" | grep -E "^parent" | awk '{ print $2 }'); do
      if [ "$(git branch --contains "$parent_commit" | grep -cE "$from")" -eq 0 ]; then
        echo false
        return 2
      fi
    done
  done

  echo true
  return 0
}

validate() {
  if [ "$#" -ne 2 ]; then
    echo "FATAL: Require two arguments." >&2
    exit 1
  fi

  if [ -z "$(git rev-parse --verify --quiet "$from_with_origin")" ]; then
    echo "FATAL: The $from_with_origin branch does not exist." >&2
    exit 1
  fi

  if [ -z "$(git rev-parse --verify --quiet "$into_with_origin")" ]; then
    echo "FATAL: The $into_with_origin branch does not exist." >&2
    exit 1
  fi
}

main "$@"
